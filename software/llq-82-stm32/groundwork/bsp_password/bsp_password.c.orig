#include "stdio.h"
#include "bsp_password.h"

void set_pass_word_def(password_ctr *password_ctr_t)
{
	uint8_t i=0;
	for(i=0;i<MAX_PASS_NUM;i++)
	{
		sprintf(password_ctr_t->pass_word_t[i].pass_name,"password",i);
		sprintf(password_ctr_t->pass_word_t[i].pass_word,"12345678_%d",i);
	}
	password_ctr_t->pass_word_len = MAX_PASS_NUM;
}

//根据密码名称更新显示
void lvgl_roller_updata(password_ctr *password_ctr_t,char *lv_buff)
{
	uint8_t i=0;
	char lv_buff_num[MAX_PASS_NAME_LEN];
	memset(lv_buff,0,sizeof(lv_buff));
	for(i=0;i<password_ctr_t->pass_word_len-1;i++)
	{
		sprintf(lv_buff_num,"[%d]:",i);
		strcat(lv_buff,lv_buff_num);
		strcat(lv_buff,password_ctr_t->pass_word_t[i].pass_name);
		strcat(lv_buff,"\n");
	}
			sprintf(lv_buff_num,"[%d]:",i);
		strcat(lv_buff,lv_buff_num);
	strcat(lv_buff,password_ctr_t->pass_word_t[i].pass_name);
	strcat(lv_buff,lv_buff_end);
}
void set_passname(password_ctr *password_ctr_t,char *pass_t,uint8_t num)
{
	if(num<MAX_PASS_NUM)
	{
		memset(password_ctr_t->pass_word_t[num].pass_word,0,sizeof(password_ctr_t->pass_word_t[num].pass_word));
		strcat(password_ctr_t->pass_word_t[num].pass_word,pass_t);
	}
}
void set_password(password_ctr *password_ctr_t,char *pass_t,uint8_t num)
{
	if(num<MAX_PASS_NUM)
	{
		memset(password_ctr_t->pass_word_t[num].pass_word,0,sizeof(password_ctr_t->pass_word_t[num].pass_word));
		strcat(password_ctr_t->pass_word_t[num].pass_word,pass_t);
	}
}
